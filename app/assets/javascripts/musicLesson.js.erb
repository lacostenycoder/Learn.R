var soundArr = [];
var context = new webkitAudioContext() || new AudioContext();
var audioBuffer = [];
var bufferLoader;

function initMusicLesson(musicLessonObj) {

  var keyLookup = {
    90: "c2",
    83: "c-2",
    88: "d2",
    68: "d-2",
    67: "e2",
    86: "f2",
    71: "f-2",
    66: "g2",
    72: "g-2",
    78: "a3",
    74: "a-3",
    77: "b3",
    81: "c3",
    50: "c-3",
    87: "d3",
    51: "d-3",
    69: "e3",
    82: "f3",
    53: "f-3",
    84: "g3",
    54: "g-3",
    89: "a4",
    55: "a-4",
    85: "b4",
    73: "c5"
  }

  var bankLoader = [
    {key: 90, note: "c2"},
    {key: 83, note: "c-2"},
    {key: 88, note: "d2"},
    {key: 68, note: "d-2"},
    {key: 67, note: "e2"},
    {key: 86, note: "f2"},
    {key: 71, note: "f-2"},
    {key: 66, note: "g2"},
    {key: 72, note: "g-2"},
    {key: 78, note: "a3"},
    {key: 74, note: "a-3"},
    {key: 77, note: "b3"},
    {key: 81, note: "c3"},
    {key: 50, note: "c-3"},
    {key: 87, note: "d3"},
    {key: 51, note: "d-3"},
    {key: 69, note: "e3"},
    {key: 82, note: "f3"},
    {key: 53, note: "f-3"},
    {key: 84, note: "g3"},
    {key: 54, note: "g-3"},
    {key: 89, note: "a4"},
    {key: 55, note: "a-4"},
    {key: 85, note: "b4"},
    {key: 73, note: "c5"},
  ];

  var keyHeld = {
    "c2": false,
    "c-2": false,
    "d2": false,
    "d-2": false,
    "e2": false,
    "f2": false,
    "f-2": false,
    "g2": false,
    "g-2": false,
    "a3": false,
    "a-3": false,
    "b3": false,
    "c3": false,
    "c-3": false,
    "d3": false,
    "d-3": false,
    "e3": false,
    "f3": false,
    "f-3": false,
    "g3": false,
    "g-3": false,
    "a4": false,
    "a-4": false,
    "b4": false,
    "c5": false
  }

  var musicLessonID = musicLessonObj.id;
  var lessonSeq = musicLessonObj.solution_key_pattern; // this will come from database
  var lessonText = "Here is a C major scale. Can you play it?"
  var userInput = ""; //initialize empty strings for functions
  var keyCheck;
  var keyToPlay;
  var gameWon = false;
  var selectedInstrument = "piano";
  var audioSourcePrefix = '<audio src="/assets/piano/';
  var lessonMode = false;
  var sustainPedal = true;

  // set event listeners for mouse and key presses

  $('#lesson').click(function(){
    lessonMode = true;
    startLesson();
  });

  $( "body" ).on( "keydown", function( event ) {
    keyDown(event);
  });

  $( "body" ).on( "keyup", function( event ) {
    keyUp(event);
  });

  $( "#sound-selector" ).change(function(e) {
    selectedInstrument = (e.target.value);
    audioSourcePrefix = '<audio src="/assets/' + selectedInstrument + '/';
    var keyboardPartial = $('#keyboard-partial')
    if (selectedInstrument === 'guitar') {
      keyboardPartial.css('background', "url('/assets/guitar.png') no-repeat");
      keyboardPartial.css('background-size', '90%');
      loadKeyBank('guitar');
    } else {
      keyboardPartial.css('background-size', '78%');
      keyboardPartial.css('background', "url('/assets/grandpiano.png') no-repeat");
      loadKeyBank('piano');
    }
    keyboardPartial.css('height', '800px');
  });

  function updateSoundSelector( newSelectElement ) {
    $("#sound-selector").empty().append( newSelectElement.childNodes );
  }

  function loadKeyBank(bank){
    for(i=0; i<bankLoader.length; i++){
      var keyToPlay = keyLookup[bankLoader[i].key];
      var keyId = bankLoader[i].note;
      var thisKey = $('#'+keyToPlay);
      var url = '/assets/' + bank + '/' + keyId + '.mp3';
      soundArr[i] = {key: keyId, buffer: url, sound: i};
    }
    buildBank(soundArr);
  }

  loadKeyBank(selectedInstrument);
  var soundLoader = new BufferLoader();


  function keyDown( event ){
    if (event.which == 80){ sustainPedal = !!((sustainPedal == false)); }
    keyPressed = event.which;
    keyToPlay = keyLookup[keyPressed];
    if (!keyHeld[keyToPlay]) {
      playKey(keyToPlay);
      $("#"+keyToPlay ).addClass("keypress");
      if (userInput.length > 100){
        alert('Sorry, try again!');
        $("#"+keyToPlay ).removeClass("keypress");
        userInput = "";
      }
      if (lessonMode) {
        userInput += (keyPressed + ", ").toString();
      }
      keyHeld[keyToPlay] = true;
    }
  }

  function keyUp( event ) {
    keyToRelease = keyLookup[event.which];
    keyHeld[keyToRelease] = false;
    if (!sustainPedal){ fadeVolume(keyToRelease); }
    $('#'+keyToRelease).removeClass('keypress');
    if(!gameWon){
      checkAnswer(userInput);
    } else {
      userInput = "";
      gameWon = false;
    }
  }

  function fadeVolume( event ){
     var fade = $.grep(soundArr, function(e){ return e.key === event; })[0];
     fadeSound(bufferLoader.bufferList[fade.sound]);
  }

  function playLesson(keyCheck){
    if (lessonMode) {
      $("#"+keyLookup[keyCheck] ).addClass("keypress");
      playLessonKey(keyLookup[keyCheck]);
      $('.key').removeClass('keypress');
    }
  }

  function playKey(keyId){
    if (!keyHeld[keyId]) {
      var thisKey = $('#'+keyToPlay);
      if (thisKey.length > 0) {
        var play = $.grep(soundArr, function(e){ return e.key === keyId; })[0];
        playSound(bufferLoader.bufferList[play.sound]);
      }

    }
  }

  function playLessonKey(keyId){
   $('.lesson-player').empty();
   var play = $.grep(soundArr, function(e){ return e.key === keyId; })[0];
   playSound(bufferLoader.bufferList[play.sound]);

  }

  function startLesson(){
    $('.player').empty();
    $('.lesson-player').empty();
    playSequence(lessonSeq);
  }

  function playSequence(seq){
    var notes = seq.split(', ');
    var max = notes.length;
    var counter = 0;
    var i = setInterval(function(){
      if (counter >= 0) {
        $('.key').removeClass('keypress');
        var note = notes[counter];
        var keyCode = keyLookup[note];
        $("div#"+keyCode).addClass("keypress");
        playLessonKey(keyCode);
        setInterval(function(){ $('.key').removeClass('keypress');}, 450);
      }
      counter ++;
      if (counter >= max) {
        clearInterval(i);
      }
    }, 500);
  }

  function checkAnswer(userInput){
    if (userInput.indexOf(lessonSeq) > -1 && lessonMode) {
      gameWon = true;
      lessonMode = false;
      //alert('You won!');
      $.ajax({
        url: ('/music_lessons/' + musicLessonID + '/update-win'),
        method: 'post'
      });
    }
  }

} //End Music Lesson

function getMusicLesson() {
  var lessonID = $('.music-lesson-id').eq(0).data().id;
  var lesson = $.ajax({
    url: ('/music_lessons/' + lessonID),
    method: 'get',
    dataType: 'json',
    async: false
  });
  return lesson.responseJSON;
}
